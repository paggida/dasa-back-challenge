{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0",
    "title": "Dasa Challenge - Back"
  },
  "host": "localhost:3030",
  "tags": [
    {
      "name": "Laboratory",
      "description": "Features to handle de laboratory data."
    },
    { "name": "Exam", "description": "Features to handle de exam data." },
    { "name": "ExamType", "description": "Features to handle de exam type data." }
  ],
  "schemes": ["http"],
  "paths": {
    "/laboratory/index/{status}": {
      "get": {
        "tags": ["Laboratory"],
        "summary": "List of all registered laboratories",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["all", "active", "inactive"],
              "default": "available"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ArrayOfLaboratory"
            }
          },
          "400": {
            "description": "Action canceled! Invalid status",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/laboratory/show/{labId}": {
      "get": {
        "tags": ["Laboratory"],
        "summary": "Get data about a specific laboratory",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "labId",
            "in": "path",
            "description": "Laboratory identification code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Laboratory" }
          },
          "404": {
            "description": "Action canceled! Laboratory not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/laboratory/store": {
      "post": {
        "tags": ["Laboratory"],
        "summary": "Add one or more laboratories to the repository",
        "description": "",
        "operationId": "store",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of laboratory object that needs to be added to the repository",
            "required": true,
            "schema": { "$ref": "#/definitions/ArrayOfNewLaboratories" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ArrayOfLaboratory"
            }
          },
          "405": {
            "description": "Action canceled! Invalid input at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/laboratory/update": {
      "put": {
        "tags": ["Laboratory"],
        "summary": "Update one or more laboratories in the repository",
        "description": "",
        "operationId": "update",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of laboratory object that needs to be updated in the repository",
            "required": true,
            "schema": { "$ref": "#/definitions/ArrayOfLaboratory" }
          }
        ],
        "responses": {
          "404": {
            "description": "Action canceled! Laboratory not found at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Action canceled! Invalid input at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/laboratory/destroy/{labsIds}": {
      "delete": {
        "tags": ["Laboratory"],
        "summary": "Delete one or more laboratories in the repository",
        "description": "",
        "operationId": "destroy",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "labsIds",
            "in": "path",
            "description": "String with laboratories IDs (separete by '|') that needs to be deleted at the repository",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Action canceled! Laboratory not found at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/index/{status}": {
      "get": {
        "tags": ["Exam"],
        "summary": "List of all registered exams",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["all", "active", "inactive"],
              "default": "available"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ArrayOfExam"
            }
          },
          "400": {
            "description": "Action canceled! Invalid status",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/show/{examId}": {
      "get": {
        "tags": ["Exam"],
        "summary": "Get data about a specific exam",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "examId",
            "in": "path",
            "description": "Exam identification code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/Exam" }
          },
          "404": {
            "description": "Action canceled! Exam not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/store": {
      "post": {
        "tags": ["Exam"],
        "summary": "Add one or more exams to the repository",
        "description": "",
        "operationId": "store",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of exam object that needs to be added to the repository",
            "required": true,
            "schema": { "$ref": "#/definitions/ArrayOfNewExams" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ArrayOfExam"
            }
          },
          "405": {
            "description": "Action canceled! Invalid input at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/update": {
      "put": {
        "tags": ["Exam"],
        "summary": "Update one or more exams in the repository",
        "description": "",
        "operationId": "update",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of exam object that needs to be updated in the repository",
            "required": true,
            "schema": { "$ref": "#/definitions/ArrayOfExam" }
          }
        ],
        "responses": {
          "404": {
            "description": "Action canceled! Exam not found at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Action canceled! Invalid input at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/destroy/{examsIds}": {
      "delete": {
        "tags": ["Exam"],
        "summary": "Delete one or more exams in the repository",
        "description": "",
        "operationId": "destroy",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "examsIds",
            "in": "path",
            "description": "String with exams IDs (separete by '|') that needs to be deleted at the repository",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Action canceled! Exam not found at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/{examId}/linkLaboratory": {
      "post": {
        "tags": ["Exam"],
        "summary": "Link one or more laboratories to a specific exam",
        "description": "",
        "operationId": "linkLaboratory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "examId",
            "in": "path",
            "description": "Exam identification code",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Array of id laboratory that needs to be link",
            "required": true,
            "schema": { "$ref": "#/definitions/ArrayOfIdLaboratories" }
          }
        ],
        "responses": {
          "404": {
            "description": "Action canceled! Exam not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Action canceled! Invalid input at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/{examId}/unlinkLaboratory": {
      "delete": {
        "tags": ["Exam"],
        "summary": "Unlink one or more laboratories to a specific exam",
        "description": "",
        "operationId": "unlinkLaboratory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "examId",
            "in": "path",
            "description": "Exam identification code",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Array of id laboratory that needs to be unlink",
            "required": true,
            "schema": { "$ref": "#/definitions/ArrayOfIdLaboratories" }
          }
        ],
        "responses": {
          "404": {
            "description": "Action canceled! Exam not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Action canceled! Invalid input at positions:",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/{examName}/laboratories": {
      "get": {
        "tags": ["Exam"],
        "summary": "Get all the laboratories linked to a specific exam",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "examName",
            "in": "path",
            "description": "Exam name identification code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ArrayOfLaboratory" }
          },
          "404": {
            "description": "Action canceled! Exam name not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/type/index": {
      "get": {
        "tags": ["ExamType"],
        "summary": "List of all registered type exams",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ArrayOfExamType"
            }
          }
        }
      }
    },
    "/exam/type/show/{examTypeId}": {
      "get": {
        "tags": ["ExamType"],
        "summary": "Get data about a specific type txam",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "examTypeId",
            "in": "path",
            "description": "Type exam identification code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ExamType" }
          },
          "404": {
            "description": "Action canceled! Exam type not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/exam/type/install": {
      "post": {
        "tags": ["ExamType"],
        "summary": "Initializes the repository with the standard exam types of the application",
        "description": "",
        "operationId": "store",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/exam/type/uninstall": {
      "delete": {
        "tags": ["ExamType"],
        "summary": "Removes the repository with the standard exam types of the application",
        "description": "",
        "operationId": "destroy",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Laboratory": {
      "type": "object",
      "properties": {
        "_id": { "type": "string" },
        "name": { "type": "string" },
        "address": { "type": "string" },
        "status": { "type": "boolean" },
        "createdAt": { "type": "string", "format":"date-time" }
      }
    },
    "Exam": {
      "type": "object",
      "properties": {
        "_id": { "type": "string" },
        "name": { "type": "string" },
        "examTypeCode": { "type": "string" },
        "status": { "type": "boolean" },
        "createdAt": { "type": "string", "format":"date-time" }
      }
    },
    "ExamType": {
      "type": "object",
      "properties": {
        "_id": { "type": "string" },
        "description": { "type": "string" },
        "createdAt": { "type": "string", "format":"date-time" }
      }
    },
    "ArrayOfLaboratory": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/Laboratory"
      }
    },
    "ArrayOfNewLaboratories": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "address": { "type": "string" }
        }
      }
    },
    "ArrayOfIdLaboratories": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ArrayOfExam": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/Exam"
      }
    },
    "ArrayOfNewExams": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "examTypeCode": { "type": "string" }
        }
      }
    },
    "ArrayOfExamType": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/ExamType"
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "message": { "type": "string" },
        "positions": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}
